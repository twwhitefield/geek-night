#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

# Ignore files to be processed inside content folder
ignore '/example.html'
ignore '/assets/css/**/*.scss'

# Complile sass file matching the pattern
compile '/assets/css/*.sass' do
  puts(item.raw_filename)
  filter :sass, filename: item.raw_filename, load_paths: [ '.', '/assets/css/' ], cache: false
end

# Compilation rule for setting layout
# Inside content folder default.html.erb and archive.html.erb must be present
compile '/*.html' do
  unless item.binary?
    filter :erb
    layout start_date.future? ? '/default.*' : '/archive.*'
  end
end

# Empty compilation rules for assets for other file type. Ex - HTML
compile '/assets/**/*' do
end

route '/assets/css/*.sass' do
  # Compile SASS to CSS
  item.identifier.to_s.gsub('.sass', '.css').sub(/\A\/assets/, '')
end

route '/assets/**/*' do
  item.identifier.to_s.sub(/\A\/assets/, '')
end

route '/*.html' do
  if item.binary?
    puts item.raw_filename
    item.identifier.chop
  else
    archived_path = "/#{start_date.strftime('%Y-%m')}.html"
    # start_date.future? '/index.html' : archived_path

    # Use latest instead of start date, so even if contents with
    # past date is available, latest one is routed as index.html
    item == latest ? '/index.html' : archived_path
  end
end

layout '/*', :erb